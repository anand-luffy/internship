{"ast":null,"code":"var _jsxFileName = \"E:\\\\my-app\\\\src\\\\Addpost.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Navbar from \"./Navbar\";\nimport { ref, uploadBytes } from \"firebase/storage\";\nimport { auth, storage } from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Addpost() {\n  _s();\n  const [typefile, settypefile] = useState();\n  const [text, settext] = useState(\"\");\n  const handleclick = () => {\n    if (typefile == null) return;\n    const imageref = ref(storage, `Post/images${auth.uid}`);\n    uploadBytes(imageref, typefile).then(() => {\n      settext(\"image uploaded\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center justify-content-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => {\n            settypefile(e.target.files[0]);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          onClick: handleclick,\n          children: \"AddPost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 5\n      }, this), text === null ? text : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 14\n  }, this);\n}\n_s(Addpost, \"saLbm3kyFDG6W1SXCd2R1YKxJ5E=\");\n_c = Addpost;\nexport default Addpost;\nvar _c;\n$RefreshReg$(_c, \"Addpost\");","map":{"version":3,"names":["React","useState","Navbar","ref","uploadBytes","auth","storage","jsxDEV","_jsxDEV","Addpost","_s","typefile","settypefile","text","settext","handleclick","imageref","uid","then","children","fileName","_jsxFileName","lineNumber","columnNumber","className","type","onChange","e","target","files","onClick","_c","$RefreshReg$"],"sources":["E:/my-app/src/Addpost.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Navbar from \"./Navbar\";\r\nimport { ref, uploadBytes } from \"firebase/storage\";\r\nimport { auth, storage } from \"./firebase\";\r\n\r\nfunction Addpost() {\r\n    const [typefile,settypefile] = useState();\r\n    const [text,settext] = useState(\"\");\r\n    const handleclick = () => {\r\n    if(typefile== null) return;\r\n    const imageref = ref(storage,`Post/images${auth.uid}`)\r\n    uploadBytes(imageref,typefile).then(()=>{settext(\"image uploaded\")})\r\n\r\n    }\r\n\r\n    return ( <div>\r\n    <Navbar />\r\n    <div className=\"d-flex align-items-center justify-content-center\">\r\n    <div className=\"app\">\r\n        <input type=\"file\" onChange={(e)=>{settypefile(e.target.files[0])}}/>\r\n        <br></br>\r\n        <button type=\"submit\" onClick={handleclick}>AddPost</button>\r\n    </div>\r\n    {text===null ? text : \"\"}\r\n    </div>\r\n    </div>);\r\n}\r\n\r\nexport default Addpost;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,SAASC,GAAG,EAAEC,WAAW,QAAQ,kBAAkB;AACnD,SAASC,IAAI,EAAEC,OAAO,QAAQ,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3C,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,QAAQ,EAACC,WAAW,CAAC,GAAGX,QAAQ,CAAC,CAAC;EACzC,MAAM,CAACY,IAAI,EAACC,OAAO,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACnC,MAAMc,WAAW,GAAGA,CAAA,KAAM;IAC1B,IAAGJ,QAAQ,IAAG,IAAI,EAAE;IACpB,MAAMK,QAAQ,GAAGb,GAAG,CAACG,OAAO,EAAE,cAAaD,IAAI,CAACY,GAAI,EAAC,CAAC;IACtDb,WAAW,CAACY,QAAQ,EAACL,QAAQ,CAAC,CAACO,IAAI,CAAC,MAAI;MAACJ,OAAO,CAAC,gBAAgB,CAAC;IAAA,CAAC,CAAC;EAEpE,CAAC;EAED,oBAASN,OAAA;IAAAW,QAAA,gBACTX,OAAA,CAACN,MAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVf,OAAA;MAAKgB,SAAS,EAAC,kDAAkD;MAAAL,QAAA,gBACjEX,OAAA;QAAKgB,SAAS,EAAC,KAAK;QAAAL,QAAA,gBAChBX,OAAA;UAAOiB,IAAI,EAAC,MAAM;UAACC,QAAQ,EAAGC,CAAC,IAAG;YAACf,WAAW,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;UAAA;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eACrEf,OAAA;UAAAY,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACTf,OAAA;UAAQiB,IAAI,EAAC,QAAQ;UAACK,OAAO,EAAEf,WAAY;UAAAI,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3D,CAAC,EACLV,IAAI,KAAG,IAAI,GAAGA,IAAI,GAAG,EAAE;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AACV;AAACb,EAAA,CArBQD,OAAO;AAAAsB,EAAA,GAAPtB,OAAO;AAuBhB,eAAeA,OAAO;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}